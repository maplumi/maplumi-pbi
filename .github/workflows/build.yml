# GitHub Actions workflow for automated Power BI visual builds
name: Build and Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      semantic_changed: ${{ steps.semantic_diff.outputs.semantic_changed }}
      version: ${{ steps.read_version.outputs.version }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Read current version
      id: read_version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $VERSION"

    - name: Detect semantic version change
      id: semantic_diff
      run: |
        CURR=${{ steps.read_version.outputs.version }}
        CURR_SEM=${CURR%.*}
        if git show HEAD^:package.json >/dev/null 2>&1; then
          PREV=$(git show HEAD^:package.json | node -e "let d='';process.stdin.on('data',c=>d+=c).on('end',()=>process.stdout.write(JSON.parse(d).version));")
          PREV_SEM=${PREV%.*}
        else
          PREV_SEM=""
        fi
        if [ "$PREV_SEM" != "$CURR_SEM" ]; then
          echo "semantic_changed=true" >> $GITHUB_OUTPUT
          echo "Semantic change: $PREV_SEM -> $CURR_SEM"
        else
          echo "semantic_changed=false" >> $GITHUB_OUTPUT
          echo "No semantic change (semantic remains $CURR_SEM)"
        fi

    - name: Run tests
      run: npm test

    - name: Auto build version bump (4th part)
      if: steps.semantic_diff.outputs.semantic_changed == 'false'
      env:
        AUTO_COMMIT: 1
      run: npm run version:auto

    - name: Package visual
      run: npx pbiviz package

    - name: Upload visual package (always)
      uses: actions/upload-artifact@v4
      with:
        name: powerbi-visual-${{ github.run_number }}
        path: dist/*.pbiviz
        retention-days: 14

  release:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.semantic_changed == 'true' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Ensure sync (idempotent)
      run: npm run sync-version

    - name: Package for release
      run: npx pbiviz package

    - name: Get version
      id: get_version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        SEMVER=${VERSION%.*}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "semver=$SEMVER" >> $GITHUB_OUTPUT
        echo "Version: $VERSION (semantic $SEMVER)"

    - name: Get .pbiviz filename
      id: get_filename
      run: |
        PBIVIZ_FILE=$(ls dist/*.pbiviz | head -1)
        FILENAME=$(basename "$PBIVIZ_FILE")
        echo "filename=$FILENAME" >> $GITHUB_OUTPUT
        echo "filepath=$PBIVIZ_FILE" >> $GITHUB_OUTPUT

    - name: Tag semantic version
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        if git rev-parse v${{ steps.get_version.outputs.semver }} >/dev/null 2>&1; then
          echo "Tag v${{ steps.get_version.outputs.semver }} already exists"
        else
          git tag v${{ steps.get_version.outputs.semver }}
          git push --tags
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.semver }}
        name: maplumi-pbi v${{ steps.get_version.outputs.version }}
        body: |
          ðŸŽ¨ **Maplumi Power BI Visual Release**

          **Version:** ${{ steps.get_version.outputs.version }} (semantic v${{ steps.get_version.outputs.semver }})
          **Build:** ${{ github.run_number }}
          **Commit:** ${{ github.sha }}

          ### ðŸ“¦ Package Details
          - **Visual Name:** Maplumi Power BI Visual
          - **File:** ${{ steps.get_filename.outputs.filename }}
          - **Type:** Power BI Custom Visual (.pbiviz)

          ### ðŸš€ Installation
          1. Download the `.pbiviz` file below
          2. Import into Power BI Desktop
          3. Add to your reports and dashboards

          ### ðŸ“‹ What's New
          See commit history for detailed changes (semantic version change detected).
        files: |
          ${{ steps.get_filename.outputs.filepath }}
        draft: false
        prerelease: false
